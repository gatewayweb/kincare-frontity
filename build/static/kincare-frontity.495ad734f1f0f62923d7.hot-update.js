webpackHotUpdate("kincare-frontity",{

/***/ "./packages/kincare-theme/src/components/pages/Home.js":
/*!*************************************************************!*\
  !*** ./packages/kincare-theme/src/components/pages/Home.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"./node_modules/core-js/modules/es.symbol.description.js\");\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_waypoint__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-waypoint */ \"./node_modules/react-waypoint/es/index.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var _parts_ContactForm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parts/ContactForm */ \"./packages/kincare-theme/src/components/parts/ContactForm.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nconst[populated,setPopulated]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({what_we_offer:false,services:false});const Home=({state,page})=>{const{who_we_are,what_we_offer,services,our_mission,why_us}=page.acf;let sectionPadding='48px 32px';const WhoWeAre=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"section\", false?undefined:{target:\"ebbr1eg7\",label:\"WhoWeAre\"})(\"background-color:\",state.theme.colors.darkBlue,\";padding:\",sectionPadding,\";color:#ffffff;h2{font-weight:bold;}p{font-size:16px;font-weight:400;line-height:22px;letter-spacing:0em;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const WhatWeOffer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"section\", false?undefined:{target:\"ebbr1eg6\",label:\"WhatWeOffer\"})(\"padding:\",sectionPadding,\";h2{font-weight:bold;}img{border-radius:8px;}p{font-size:16px;font-weight:400;line-height:22px;letter-spacing:0em;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const Services=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"section\", false?undefined:{target:\"ebbr1eg5\",label:\"Services\"})(\"padding:\",sectionPadding,\";background-color:\",state.theme.colors.lightGrayBlue,\";position:relative;&:before{content:'';width:0;height:0;border-style:solid;border-width:34px 37px 0 37px;border-color:#ffffff transparent transparent transparent;position:absolute;left:calc(50% - 37px);top:-2px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const ServiceBox=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"article\", false?undefined:{target:\"ebbr1eg4\",label:\"ServiceBox\"})(\"padding:16px;background-color:#ffffff;border-radius:8px;box-shadow:0px 15px 24px rgba(0, 0, 0, 0.05);text-align:center;margin-top:16px;h3{font-size:24px;font-weight:700;margin-bottom:40px;position:relative;width:100%;&:after{content:'';width:40px;height:5px;background-color:\",state.theme.colors.darkGray,\";position:absolute;left:calc(50% - 20px);bottom:-20px;}}p{font-size:16px;font-weight:300;line-height:17px;letter-spacing:1px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const Mission=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"section\", false?undefined:{target:\"ebbr1eg3\",label:\"Mission\"})(\"background-color:\",state.theme.colors.darkBlue,\";padding:\",sectionPadding,\";color:#ffffff;h2{font-weight:800;&:after{width:80px;height:10px;}}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const WhyUs=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"section\", false?undefined:{target:\"ebbr1eg2\",label:\"WhyUs\"})(\"padding:\",sectionPadding,\";h2{font-weight:800;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const WhyUsBox=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"article\", false?undefined:{target:\"ebbr1eg1\",label:\"WhyUsBox\"})(\"padding:40px 30px;background-color:\",state.theme.colors.lightGrayBlue,\";border-radius:8px;text-align:center;h3{font-size:28px;font-weight:900;}p{font-size:16px;font-weight:300;line-height:17px;margin:0;}img{margin-bottom:10px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const ContactSection=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"section\", false?undefined:{target:\"ebbr1eg0\",label:\"ContactSection\"})(\"padding:\",sectionPadding,\";background-color:\",state.theme.colors.lightGrayBlue,\";\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const animateSection=section=>{switch(section){case'what-we-offer':console.log('test');gsap__WEBPACK_IMPORTED_MODULE_6__[\"default\"].from(`.what-we-offer .img-fluid`,{x:-300,opacity:0,duration:0.5});gsap__WEBPACK_IMPORTED_MODULE_6__[\"default\"].from('.what-we-offer h2, .what-we-offer p',{x:-400,opacity:0,duration:0.35,stagger:0.15});}};return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(WhoWeAre,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"container\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"row\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"col col-12 text-center\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h2\",{children:who_we_are.title}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:who_we_are.content})]})})})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react_waypoint__WEBPACK_IMPORTED_MODULE_5__[\"Waypoint\"],{onEnter:()=>animateSection('what-we-offer'),topOffset:\"50%\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(WhatWeOffer,{className:\"what-we-offer\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"container\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"row justify-content-center\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col col-12 col-xl-4\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{className:\"img-fluid\",src:what_we_offer.image})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"col col-12 col-xl-4 d-flex flex-column justify-content-center\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h2\",{children:what_we_offer.title}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:what_we_offer.content})]})]})})})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Services,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"container\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"row justify-content-center\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col-12 col-md-6 col-xl-3\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(ServiceBox,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:services.service_1.icon}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h3\",{children:services.service_1.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:services.service_1.description})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col-12 col-md-6 col-xl-3\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(ServiceBox,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:services.service_2.icon}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h3\",{children:services.service_2.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:services.service_2.description})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col-12 col-md-6 col-xl-3\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(ServiceBox,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:services.service_3.icon}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h3\",{children:services.service_3.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:services.service_3.description})]})})]})})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Mission,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"container\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"row justify-content-center\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"col col-12 col-xl-8\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h2\",{children:our_mission.title}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:our_mission.content})]})})})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(WhyUs,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"container\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"row justify-content-center\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"col col-12 col-xl-8 text-center\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h2\",{children:why_us.title}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:why_us.content})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"div\",{className:\"row justify-content-center pt-4\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col-12 col-md-6 col-xl-3\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(WhyUsBox,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:why_us.reason_1.icon}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h3\",{children:why_us.reason_1.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:why_us.reason_1.description})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col-12 col-md-6 col-xl-3\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(WhyUsBox,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:why_us.reason_2.icon}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h3\",{children:why_us.reason_2.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:why_us.reason_2.description})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col-12 col-md-6 col-xl-3\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(WhyUsBox,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:why_us.reason_3.icon}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"h3\",{children:why_us.reason_3.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:why_us.reason_3.description})]})})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"row\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"div\",{className:\"col pt-5 text-center\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"a\",{href:why_us.cta.link_to,children:why_us.cta.link_text})})})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(ContactSection,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_parts_ContactForm__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(Home));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/kincare-theme/src/components/pages/Home.js\n");

/***/ })

})